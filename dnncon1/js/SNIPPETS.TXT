******************************************************************************************
DEMO 1 MARKUP
******************************************************************************************

<!-- DEMO 1 MARKUP -->
  <fa-modifier fa-origin="[.5, .5]" fa-rotate-y="rotateY.get()">
    <fa-surface fa-size="[true, true]" fa-color="'rgb(255,255,250)'">
      <img class="logo" src="img/dnnlogo.png" style="width: 225px; height: 230px;"/>
    </fa-surface>

    <fa-modifier fa-rotate-y="3.14159">
      <fa-surface fa-size="[true, true]" fa-color="'rgb(255,255,250)'">
        <img class="logo" src="img/dnnlogo.png" style="width: 225px; height: 230px;" />
      </fa-surface>
    </fa-modifier>
  </fa-modifier>

  <fa-modifier fa-origin="[.5, .9]" fa-size="[250, 100]">
    <fa-surface>
        <input type="radio" value="10.0" ng-model="value" 
  name="speed" ng-change="changeSpeed(value)" checked><span>Slow</span>
        <input type="radio" value="50.0" ng-model="value" 
  name="speed" ng-change="changeSpeed(value)"><span>Medium</span>
        <input type="radio" value="100.0" ng-model="value" 
  name="speed" ng-change="changeSpeed(value)"><span>Fast</span>        
    </fa-surface>
  </fa-modifier>

******************************************************************************************
DEMO 1 DEPENDENCIES
******************************************************************************************

var Timer = $famous['famous/utilities/Timer'];

******************************************************************************************
DEMO 1 JS CODE
******************************************************************************************

$scope.spinnerSpeed = 10.0;
$scope.changeSpeed = function(value) {                    
          $scope.spinnerSpeed = parseFloat(value);
};
                            
$scope.rotateY = new Transitionable(0);
            
//Run function on every tick of the Famo.us engine
Timer.every(function(){
      var adjustedSpeed = $scope.spinnerSpeed / 1200.0;
      $scope.rotateY.set($scope.rotateY.get() + adjustedSpeed);
}, 1);
    


******************************************************************************************
DEMO 2 MARKUP
******************************************************************************************

<!-- DEMO 1 MARKUP -->
  <fa-modifier fa-origin="[.5, .5]" fa-rotate-y="rotateY.get()">
    <fa-surface fa-size="[true, true]" fa-color="'rgb(255,255,250)'">
      <i

******************************************************************************************
DEMO 2+3+4 DEPENDENCIES
******************************************************************************************

var Easing = $famous['famous/transitions/Easing'];
var SpringTransition = $famous['famous/transitions/SpringTransition'];
Transitionable.registerMethod('spring', SpringTransition);      

******************************************************************************************
DEMO 2 CODE
******************************************************************************************

// Static list for conference session
// Replace with call to DNN or other REST service
$scope.list = [
         {content: "Item 1", bgColor: "#b58900", rotate: new Transitionable(0)},
         {content: "Item 2", bgColor: "#cb4b16", rotate: new Transitionable(0)},
         {content: "Item 3", bgColor: "#dc322f", rotate: new Transitionable(0)},
         {content: "Item 4", bgColor: "#d33682", rotate: new Transitionable(0)},
         {content: "Item 5", bgColor: "#6c71c4", rotate: new Transitionable(0)},
         {content: "Item 6", bgColor: "#268bd2", rotate: new Transitionable(0)}
];  
              
$scope.gridLayoutOptions = {
                  dimensions: [2, 3]
};


******************************************************************************************
DEMO 3 CODE
******************************************************************************************

$scope.spin = function(i) {
    $scope.list[i].rotate.set(Math.PI * 4, 
{curve: Easing.inOutElastic, duration: 3000  }); 
};


******************************************************************************************
DEMO 4 CODE
******************************************************************************************

$scope.rotationState = 0;            
$scope.animate = function(p) {
if ($scope.rotationState != p) {
           for (var i = 0; i < $scope.list.length; i++) {
                $scope.list[i].rotate.set(p * 10 * (Math.PI/180), 
{method : 'spring', dampingRatio : 0.5, period : 500});
                      };
                $scope.rotationState = p;
       }
};
    
$scope.success = function(accel) {
       // The accel parameter contains x, y and z properties 
// indicating the acceleration in m/s squared
                    if (accel.y > 0.5) {                        
                           //$scope.animate(-1);                        
                    }
                    else if (accel.x > 0.5) {
                            //$scope.animate(1);                                                
                    };
                                      
                };
                                
                navigator.accelerometer.watchAcceleration($scope.success, function(error) {}, { frequency: 50 });
                                

